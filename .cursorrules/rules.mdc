# Cursor IDE Rules for SNO Platform

## Code Style & Standards
- Always follow SOLID principles (Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion)
- Use TypeScript strict mode with exactOptionalPropertyTypes
- Prefer composition over inheritance
- Keep functions under 50 lines, classes under 200 lines
- Use meaningful variable and function names
- Add JSDoc comments for public APIs

## Architecture Guidelines
- Use dependency injection pattern
- Implement proper error handling with try-catch blocks
- Use structured logging with correlation IDs
- Follow microservices patterns with clear service boundaries
- Implement proper health checks and graceful shutdown

## Security Requirements
- Never commit secrets or API keys
- Use parameterized queries for database operations
- Implement proper input validation with Zod schemas
- Use HTTPS in production
- Implement rate limiting and CORS policies

## Performance & Monitoring
- Use connection pooling for databases
- Implement caching strategies (Redis, in-memory)
- Add Prometheus metrics for monitoring
- Use structured logging with Pino
- Implement distributed tracing with OpenTelemetry

## Testing Requirements
- Write unit tests with Jest (minimum 80% coverage)
- Add integration tests for API endpoints
- Use E2E tests with Playwright for critical user flows
- Implement contract testing between services

## Git & CI/CD
- Use conventional commits (feat:, fix:, refactor:, etc.)
- Ensure all TypeScript errors are resolved before commit
- Run linting and formatting checks
- Use pnpm for package management
- Implement proper CI/CD pipelines with GitHub Actions